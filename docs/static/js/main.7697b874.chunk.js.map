{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAKA,EAAL,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECNyB,SAAEA,GAE3B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAW,WAGPxB,EAASC,GACJwB,MAAM,SAAAd,GACHe,YAAW,WACPH,EAAS,CACLf,KAAMG,EACNU,SAAS,MAEd,UAIZ,CAACpB,IAEGqB,EDjB2BK,CAAc1B,GAAnCa,EAAb,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OADAO,QAAQC,IAAIR,GAGR,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OACCoB,EAAU,mBAAGJ,UAAU,mCAAb,wBAAiE,KAC5E,qBAAKA,UAAU,YAAf,SAEgBH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEflCkB,EAAe,WAIxB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAGQ6C,EAAWrB,KAAM,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCpBlC+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.7697b874.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        \r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cat => [inputValue, ...cat]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n\r\n","\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=3f3LaMXN16Ls2g2WyCHuivwjI4iaHJv3`;\r\n    const resp = await fetch( url )\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n\r\n","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    // console.log({id, title, url})\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__backInDown\">\r\n            <img src={ url } alt={ title } />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   \r\n    const { data:images , loading } = useFetchGifs( category );\r\n    console.log(loading)\r\n    return (\r\n        \r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n           { loading ? <p className=\"animate__animated animate__flash\">Loading...</p> : null }\r\n            <div className=\"card-grid\">\r\n                    {\r\n                            images.map( (img) => (\r\n                                <GifGridItem \r\n                                    key = {img.id}\r\n                                    {...img }\r\n                                />\r\n                            ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const  useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n\r\n        getGifs( category )\r\n            .then( img => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: img,\r\n                        loading: false\r\n                    });\r\n                }, 1000);\r\n            } )\r\n\r\n\r\n    }, [category])\r\n\r\n    return state; // { data:[], loading: true }\r\n\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    //En este caso lo hacemos con un useState porque con el arreglo no podemos mutar los datos\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    //Agregar elemento al arreglo\r\n    /* const handleAdd = () => {\r\n        // setcategories([...categories, 'Naruto']);\r\n        setcategories( cat => [...cat, 'Naruto']);\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    /* Debemos definir el indice del elemento, en este caso key={category}*/\r\n                    categories.map(  category =>\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category } />\r\n                        )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}